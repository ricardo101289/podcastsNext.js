{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport Error from './_error';\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"RENDERRRRRRRRR\");\n      var _this$props = this.props,\n          channels = _this$props.channels,\n          statusCode = _this$props.statusCode;\n\n      if (statusCode !== 200) {\n        return __jsx(Error, {\n          statusCode: statusCode\n        });\n      }\n\n      return __jsx(Layout, {\n        title: \"App de podcasts\"\n      }, __jsx(ChannelGrid, {\n        channels: channels\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(res) {\n        var req, _ref, channels;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"datosssssss\");\n                _context.prev = 1;\n                _context.next = 4;\n                return fetch('https://api.audioboom.com/channels/recommended?api_version=2');\n\n              case 4:\n                req = _context.sent;\n                _context.next = 7;\n                return req.json();\n\n              case 7:\n                _ref = _context.sent;\n                channels = _ref.body;\n                return _context.abrupt(\"return\", {\n                  channels: channels,\n                  statusCode: 200\n                });\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](1);\n                res.statusCode = 503;\n                return _context.abrupt(\"return\", {\n                  channels: null,\n                  statusCode: 503\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 12]]);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/usuario/Documents/nextjs/podcastsNext.js/pages/index.jsx"],"names":["Layout","ChannelGrid","Error","console","log","props","channels","statusCode","res","fetch","req","json","body","React","Component"],"mappings":";;;;;;;;;AAAA,OAAO,kBAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;;;;;;;;;;;;;6BAgBa;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AADK,wBAG0B,KAAKC,KAH/B;AAAA,UAGEC,QAHF,eAGEA,QAHF;AAAA,UAGYC,UAHZ,eAGYA,UAHZ;;AAIL,UAAIA,UAAU,KAAK,GAAnB,EAAwB;AACpB,eAAO,MAAC,KAAD;AAAO,UAAA,UAAU,EAAIA;AAArB,UAAP;AACH;;AACD,aACI,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAf,SACI,MAAC,WAAD;AAAa,QAAA,QAAQ,EAAED;AAAvB,QADJ,CADJ;AAKH;;;;;;gDAxB4BE,G;;;;;;;AACzBL,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;;uBAEoBK,KAAK,CAAC,8DAAD,C;;;AAAjBC,gBAAAA,G;;uBACyBA,GAAG,CAACC,IAAJ,E;;;;AAAlBL,gBAAAA,Q,QAANM,I;iDACE;AAACN,kBAAAA,QAAQ,EAARA,QAAD;AAAWC,kBAAAA,UAAU,EAAC;AAAtB,iB;;;;;AAEPC,gBAAAA,GAAG,CAACD,UAAJ,GAAiB,GAAjB;iDACO;AAACD,kBAAAA,QAAQ,EAAE,IAAX;AAAiBC,kBAAAA,UAAU,EAAC;AAA5B,iB;;;;;;;;;;;;;;;;;;;EAVUM,KAAK,CAACC,S","sourcesContent":["import 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport Error from './_error'\n\nexport default class extends React.Component {\n\n    static async getInitialProps(res){\n        console.log(\"datosssssss\");\n        try {\n            let req = await fetch('https://api.audioboom.com/channels/recommended?api_version=2');\n            let {body: channels} = await req.json();\n            return {channels, statusCode:200}\n        } catch (error) {\n            res.statusCode = 503\n            return {channels: null, statusCode:503}\n        }\n    }\n\n    render() {\n        console.log(\"RENDERRRRRRRRR\");\n        \n        const {channels, statusCode} = this.props;\n        if (statusCode !== 200) {\n            return <Error statusCode = {statusCode}/>\n        }\n        return (\n            <Layout title =\"App de podcasts\">\n                <ChannelGrid channels={channels}></ChannelGrid>\n            </Layout>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}